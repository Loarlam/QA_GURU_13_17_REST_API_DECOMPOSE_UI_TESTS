plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

group 'guru.qa'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def junitVersion = '5.9.0',
    restAssuredVersion = "5.1.1",
    slf4jVersion = '1.7.36',
    fakerVersion = '1.0.2',
    orgJsonVersion = '20220320',
    selenideVersion = '6.6.6',
    allureVersion = '2.18.1',
    aeonbitsVersion = '1.0.12'

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies
        {
            testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion",
                    "io.rest-assured:rest-assured:$restAssuredVersion",
                    "com.github.javafaker:javafaker:$fakerVersion",
                    "org.json:json:$orgJsonVersion",
                    "com.codeborne:selenide:$selenideVersion",
                    "io.qameta.allure:allure-selenide:$allureVersion",
                    "io.qameta.allure:allure-rest-assured:$allureVersion",
                    "org.aeonbits.owner:owner:$aeonbitsVersion")
            testRuntimeOnly("org.slf4j:slf4j-simple:$slf4jVersion")
        }

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task taskWithTagDemoWebShop(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags "demoWebShop1"
        includeTags "demoWebShop2"
    }
}